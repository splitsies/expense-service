AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  expense-service-database

  SAM Template for expense-service database

Parameters:
  StagingLambdaExecutionRoleArn:
    Type: String
  DbRegion:
    Type: String
    Default: us-east-1

Resources:  
  ExpensePayer:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: ExpensePayer
      AttributeDefinitions: 
        - AttributeName: expenseId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema: 
        - AttributeName: expenseId
          KeyType: HASH
        - AttributeName: userId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpensePayer

  ExpensePayerStatus:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: ExpensePayerStatus
      AttributeDefinitions: 
        - AttributeName: expenseId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema: 
        - AttributeName: expenseId
          KeyType: HASH
        - AttributeName: userId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpensePayerStatus

  LeadingExpenseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LeadingExpense
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: transactionDateExpenseId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: transactionDateExpenseId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/LeadingExpense

  ExpenseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Expense
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/Expense

  ExpenseGroupTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ExpenseGroup
      AttributeDefinitions:
        - AttributeName: parentExpenseId
          AttributeType: S
        - AttributeName: childExpenseId
          AttributeType: S
      KeySchema:
        - AttributeName: parentExpenseId
          KeyType: HASH
        - AttributeName: childExpenseId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      GlobalSecondaryIndexes:
        - IndexName: ChildExpenseIdIndex
          KeySchema:
            - AttributeName: childExpenseId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpenseGroup
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpenseGroup/index/ChildExpenseIdIndex

  UserExpenseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserExpense
      AttributeDefinitions:
        - AttributeName: expenseId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: expenseId
          KeyType: HASH
        - AttributeName: userId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      GlobalSecondaryIndexes:
        - IndexName: UserIdIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: expenseId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/UserExpense
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/UserExpense/index/UserIdIndex

  ExpenseConnectionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ExpenseConnection
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
        - AttributeName: expenseId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
        - AttributeName: expenseId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      GlobalSecondaryIndexes:
        - IndexName: ExpenseIndex
          KeySchema:
            - AttributeName: expenseId
              KeyType: HASH
            - AttributeName: connectionId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpenseConnection
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpenseConnection/index/ExpenseIdIndex

  ConnectionTokenTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ConnectionToken
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
        - AttributeName: expenseId
          AttributeType: S
      KeySchema:
        - AttributeName: expenseId
          KeyType: HASH
        - AttributeName: connectionId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ConnectionToken

  ExpenseItemTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ExpenseItem
      AttributeDefinitions:
        - AttributeName: expenseId
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: expenseId
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableClass: STANDARD
      ResourcePolicy:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-verifyApiKey
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-create
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-connect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-disconnect
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-message
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpiredConnections
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addUserToExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getUsersForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequests
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeJoinRequest
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestsForExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-mergeGuestUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeUserFromExpense
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-createConnectionToken
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-broadcast
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteUserData
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-getJoinRequestCountForUser
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayers
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-setExpensePayerStatus
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addNewExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-addExistingExpenseToGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-removeExpenseFromGroup
                  - !Sub ${StagingLambdaExecutionRoleArn}/expense-service-staging-deleteExpense
              Action:
                - dynamodb:*
              Resource: 
                - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/ExpenseItem