AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  expense-service-roles

  SAM Template for expense-service roles

Parameters:
  MessageQueueArn:
    Type: String
  DbRegion:
    Type: String
    Default: us-east-1
  ResourceAccountId:
    Type: String

Resources:
  # IAM Role for Lambda to allow invocation by SNS
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaSNSInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Permissions to create and manage logs
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

              # Allow Lambda to receive SNS messages
              - Effect: Allow
                Action: sns:Publish
                Resource: arn:aws:sns:*:*:CrossStageExpenseMessage

              # Permission for Lambda to read from DynamoDB table
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: 
                  - !Sub arn:aws:dynamodb:${DbRegion}:${ResourceAccountId}:table/*
                  - !Sub arn:aws:dynamodb:${DbRegion}:${ResourceAccountId}:table/*/index/*
                  - !Sub arn:aws:dynamodb:${DbRegion}:${ResourceAccountId}:table/MessageQueue
                  - !Sub arn:aws:dynamodb:${DbRegion}:${ResourceAccountId}:table/MessageQueue/stream/*
                  - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/MessageQueue
                  - !Sub arn:aws:dynamodb:${DbRegion}:${AWS::AccountId}:table/MessageQueue/stream/*
                  - !Sub ${MessageQueueArn}